name: CI/CD

on:
  push:
    branches: [ main, master ]

env:
  IMAGE_NAME: aman65f/scalable-app

jobs:
  build-push:
    name: Build and push Docker image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ${{ env.IMAGE_NAME }}:${{ github.sha }}
        file: ./app/Dockerfile
        context: ./app

    - name: Set image tag output
      run: echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup kubectl
      uses: azure/setup-kubectl@v4
      with:
        version: '1.26.0'

    - name: Install yq
      run: sudo apt-get update && sudo apt-get install -y yq

    - name: Update k8s image and apply
      env:
        KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}  # base64 kubeconfig
        IMAGE: aman65f/scalable-app:${{ github.sha }}
      run: |
        echo "$KUBE_CONFIG_DATA" | base64 --decode > kubeconfig
        export KUBECONFIG=$PWD/kubeconfig
        # update image in the deployment manifest then apply
        yq e '.spec.template.spec.containers[0].image = strenv(IMAGE)' -i k8s/deployment.yaml
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/configmap.yaml
        kubectl apply -f k8s/secret.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        kubectl apply -f k8s/hpa.yaml
        kubectl apply -f k8s/ingress.yaml || true

